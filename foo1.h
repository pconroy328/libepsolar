/* This file was automatically generated.  Do not edit! */
void forceLoadOff(modbus_t *ctx);
void forceLoadOn(modbus_t *ctx);
void setRPiTiming(modbus_t *ctx);
void setLoadDeviceOff(modbus_t *ctx);
void setLoadDeviceOn(modbus_t *ctx);
void setChargingDeviceOff(modbus_t *ctx);
void setChargingDeviceOn(modbus_t *ctx);
void clearEnergyGeneratingStatistics(modbus_t *ctx);
void restoreSystemDefaults(modbus_t *ctx);
void forceLoadOnOff(modbus_t *ctx,const int value);
void setEnableLoadTestMode(modbus_t *ctx,const int value);
int getEnableLoadTestMode(modbus_t *ctx);
void setDefaultLoadControlMode(modbus_t *ctx,const int value);
int getDefaultLoadControlMode(modbus_t *ctx);
void setManualLoadControlMode(modbus_t *ctx,const int value);
int getManualLoadControlMode(modbus_t *ctx);
void setOutputControlMode(modbus_t *ctx,const int value);
int getOutputControlMode(modbus_t *ctx);
void setChargingDeviceStatus(modbus_t *ctx,const int value);
int getChargingDeviceStatus(modbus_t *ctx);
void setManagementModesOfBatteryChargingAndDischarging(modbus_t *ctx,int value);
void setChargingPercentage(modbus_t *ctx,double value);
void setDischargingPercentage(modbus_t *ctx,float value);
void setBoostDuration(modbus_t *ctx,int value);
void setEqualizeDuration(modbus_t *ctx,int value);
void setDefaultLoadOnOffInManualMode(modbus_t *ctx,int value);
void setBatteryRatedVoltageCode(modbus_t *ctx,int value);
void setDeviceConfigureOfMainPowerSupply(modbus_t *ctx,int value);
void setLengthOfNight(modbus_t *ctx,int hour,int minute);
void setBacklightTime(modbus_t *ctx,int seconds);
void setTurnOffTiming2(modbus_t *ctx,int hour,int minute,int second);
void setTurnOnTiming2(modbus_t *ctx,int hour,int minute,int second);
void setTurnOffTiming1(modbus_t *ctx,int hour,int minute,int second);
void setTurnOnTiming1(modbus_t *ctx,int hour,int minute,int second);
void setWorkingTimeLength2(modbus_t *ctx,int hour,int minute);
void setWorkingTimeLength1(modbus_t *ctx,int hour,int minute);
void setLoadControllingModes(modbus_t *ctx,int value);
void setLightSignalCloseDelayTime(modbus_t *ctx,int value);
void setNightTimeThresholdVoltage(modbus_t *ctx,float value);
void setLightSignalStartupDelayTime(modbus_t *ctx,int value);
void setDayTimeThresholdVoltage(modbus_t *ctx,double value);
void setControllerInnerTemperatureUpperLimitRecover(modbus_t *ctx,double value);
void setControllerInnerTemperatureUpperLimit(modbus_t *ctx,double value);
void setBatteryTemperatureWarningLowerLimit(modbus_t *ctx,float value);
void setBatteryTemperatureWarningUpperLimit(modbus_t *ctx,float value);
void setRealtimeClockToNow(modbus_t *ctx);
void setRealtimeClock(modbus_t *ctx,const int seconds,const int minutes,const int hour,const int day,const int month,const int year);
char *getRealtimeClockStr(modbus_t *ctx,char *buffer,const int buffSize);
void getRealtimeClock(modbus_t *ctx,int *seconds,int *minutes,int *hour,int *day,int *month,int *year);
void setDischargingLimitVoltage(modbus_t *ctx,double value);
float getDischargingLimitVoltage(modbus_t *ctx);
void setLowVoltageDisconnectVoltage(modbus_t *ctx,double value);
float getLowVoltageDisconnectVoltage(modbus_t *ctx);
void setUnderVoltageWarningVoltage(modbus_t *ctx,double value);
float getUnderVoltageWarningVoltage(modbus_t *ctx);
void setUnderVoltageWarningRecoverVoltage(modbus_t *ctx,double value);
float getUnderVoltageWarningRecoverVoltage(modbus_t *ctx);
void setLowVoltageReconnectVoltage(modbus_t *ctx,double value);
float getLowVoltageReconnectVoltage(modbus_t *ctx);
void setBoostReconnectVoltage(modbus_t *ctx,double value);
float getBoostReconnectVoltage(modbus_t *ctx);
void setFloatingVoltage(modbus_t *ctx,double value);
float getFloatingVoltage(modbus_t *ctx);
void setBoostingVoltage(modbus_t *ctx,double value);
float getBoostingVoltage(modbus_t *ctx);
void setEqualizationVoltage(modbus_t *ctx,double value);
float getEqualizationVoltage(modbus_t *ctx);
void setOverVoltageReconnect(modbus_t *ctx,double value);
float getOverVoltageReconnect(modbus_t *ctx);
void setChargingLimitVoltage(modbus_t *ctx,double value);
float getChargingLimitVoltage(modbus_t *ctx);
void setHighVoltageDisconnect(modbus_t *ctx,double value);
float getHighVoltageDisconnect(modbus_t *ctx);
void setTempertureCompensationCoefficient(modbus_t *ctx,int value);
float getTempertureCompensationCoefficient(modbus_t *ctx);
void setBatteryCapacity(modbus_t *ctx,int batteryCapacityAH);
int getBatteryCapacity(modbus_t *ctx);
void setBatteryType(modbus_t *ctx,int batteryTypeCode);
char *getBatteryType(modbus_t *ctx);
float getRatedLoadCurrent(modbus_t *ctx);
float getRatedChargingCurrent(modbus_t *ctx);
float getBatteryCurrent(modbus_t *ctx);
float getBatteryVoltage(modbus_t *ctx);
float getGeneratedEnergyTotal(modbus_t *ctx);
float getGeneratedEnergyYear(modbus_t *ctx);
float getGeneratedEnergyMonth(modbus_t *ctx);
float getGeneratedEnergyToday(modbus_t *ctx);
float getConsumedEnergyTotal(modbus_t *ctx);
float getConsumedEnergyYear(modbus_t *ctx);
float getConsumedEnergyMonth(modbus_t *ctx);
float getConsumedEnergyToday(modbus_t *ctx);
float getMinimumBatteryVoltageToday(modbus_t *ctx);
float getMaximumBatteryVoltageToday(modbus_t *ctx);
float getMinimumPVVoltageToday(modbus_t *ctx);
float getMaximumPVVoltageToday(modbus_t *ctx);
int isdischargeStatusRunnning(const uint16_t statusBits);
int isdischargeStatusNormal(const uint16_t statusBits);
int isdischargeStatusOutputOverVoltage(const uint16_t statusBits);
int isdischargeStatusBoostOverVoltage(const uint16_t statusBits);
int isdischargeStatusShortedInHighVoltage(const uint16_t statusBits);
int isdischargeStatusInputOverVoltage(const uint16_t statusBits);
int isdischargeStatusOutputVoltageAbnormal(const uint16_t statusBits);
int isdischargeStatusUnableToStopDischarge(const uint16_t statusBits);
int isdischargeStatusUnableToDischarge(const uint16_t statusBits);
int isdischargeStatusShorted(const uint16_t statusBits);
char *getDischargingStatusOutputPower(const uint16_t statusBits);
char *getDischargingStatusInputVoltageStatus(const uint16_t statusBits);
uint16_t getdisChargingEquipmentStatusBits(modbus_t *ctx);
int isChargingStatusRunning(const uint16_t statusBits);
int isChargingStatusNormal(const uint16_t statusBits);
char *getChargingStatus(const uint16_t statusBits);
int isPVInputShorted(const uint16_t statusBits);
int isDisequilibriumInThreeCircuits(const uint16_t statusBits);
int isLoadMOSFETShorted(const uint16_t statusBits);
int isLoadShorted(const uint16_t statusBits);
int isLoadOverCurrent(const uint16_t statusBits);
int isInputOverCurrent(const uint16_t statusBits);
int isAntiReverseMOSFETShort(const uint16_t statusBits);
int isChargingMOSFETOpen(const uint16_t statusBits);
int isChargingMOSFETShorted(const uint16_t statusBits);
char *getChargingEquipmentStatusInputVoltageStatus(const uint16_t statusBits);
uint16_t getChargingEquipmentStatusBits(modbus_t *ctx);
char *getBatteryStatusIdentification(const uint16_t statusBits);
char *getBatteryStatusInnerResistance(const uint16_t statusBits);
char *getBatteryStatusTemperature(const uint16_t statusBits);
char *getBatteryStatusVoltage(const uint16_t statusBits);
uint16_t getBatteryStatusBits(modbus_t *ctx);
float getBatteryRealRatedVoltage(modbus_t *ctx);
int getBatteryStateOfCharge(modbus_t *ctx);
float getDeviceTemperature(modbus_t *ctx);
float getBatteryTemperature(modbus_t *ctx);
float getLoadPower(modbus_t *ctx);
float getLoadCurrent(modbus_t *ctx);
float getLoadVoltage(modbus_t *ctx);
float getPVArrayInputPower(modbus_t *ctx);
float getPVArrayInputCurrent(modbus_t *ctx);
float getPVArrayInputVoltage(modbus_t *ctx);
int isNightTime(modbus_t *ctx);
int getOverTemperatureInsideDevice(modbus_t *ctx);
